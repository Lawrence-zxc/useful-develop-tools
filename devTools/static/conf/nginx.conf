user nobody nobody;

worker_processes 4;

error_log  logs/nginx_error.log  error;

pid        logs/nginx.pid;

#Specifies the value for maximum file descriptors that can be opened by this process.
worker_rlimit_nofile 51200;

events {
    use epoll;
    worker_connections 51200;
}

http {
    include mime.types;
    default_type  application/octet-stream;

    server_names_hash_bucket_size 256;
    client_header_buffer_size 128k;
    large_client_header_buffers 4 256k;
    client_max_body_size 100m;
    proxy_headers_hash_max_size 1024;
    proxy_headers_hash_bucket_size 2048;

    fastcgi_connect_timeout     1000;
    fastcgi_send_timeout        1000;
    fastcgi_read_timeout        1000;
    fastcgi_buffers             32 512k;
    fastcgi_busy_buffers_size   512k;
    fastcgi_buffer_size         512k;

    sendfile on;
    tcp_nodelay on;
    tcp_nopush on;

    keepalive_timeout 20;

    gzip on;
    gzip_min_length     1k;
    gzip_buffers        4 64k;
    gzip_http_version   1.1;
    gzip_comp_level     5;
    gzip_types          text/plain application/x-javascript text/css application/xml;
    gzip_vary           on;

    #limit_zone  crawler  $binary_remote_addr  10m;

    log_format  style_access    '$remote_addr - $remote_user - $request_time - [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" $http_x_forwarded_for';
    log_format  img_access      '$remote_addr - $remote_user - $request_time - [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" $http_x_forwarded_for';
    log_format  web_access     '$remote_addr - $remote_user - $request_time - [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" $http_x_forwarded_for';

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    limit_req_zone $binary_remote_addr zone=allips:10m rate=20r/s;

    server {
        listen          81;
        #server_name     www.msun.com;
        server_name     localhost;

        root /data/static/style;
        autoindex off;
        index no;
        
        location ~* \.(?:png|jpg|jpeg|gif|ico|swf)$ {
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public,must-revalidate,proxy-revalidate";
            access_log off;
            log_not_found off;
            tcp_nodelay off;
            break;
        }

        location ~* \.(?:js|css|txt)$ {
            expires 1h;
            add_header Pragma public;
            add_header Cache-Control "public,must-revalidate,proxy-revalidate";
            access_log off;
            log_not_found off;
            tcp_nodelay off;
            break;
        }


        proxy_buffer_size  128k;
        proxy_buffers   32 32k;
        proxy_busy_buffers_size 128k;

        location ~ /.svn/ {
            deny all;
        }
        location ~ /.git/ {
            deny all;
        }
        
        rewrite ^/(index)(\/|\.|.[\w]*|[\w]*)$ /$1.htm break;
        rewrite ^/(account|zbmanlogin)(\/|\.|.[\w]*|[\w]*)$   /$1/login.htm break; 
        rewrite ^/tour/$  http://$host/index.htm break; 
        rewrite ^/(account|tour|product|company|order)(.*)(.[\/]+)$  /$1$2.htm break;
        rewrite ^/(account|tour|product|company|order)(.*)([\/])$  /$1$2.htm break; 
        rewrite ^/(account|tour|product|company|order)([\/|\w]*)(\.|\/|.[\w]*|[\w]*)$ /$1$2.htm break;


        location / {
            proxy_pass        http://127.0.0.1:8080;
            proxy_set_header  Host $http_host;
            proxy_set_header  X-Real-IP        $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;

            limit_req zone=allips burst=5 nodelay;      

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
        access_log  logs/web_access.log  web_access;
    }

    server {
        listen 80 default;
       return 400;
    }

}